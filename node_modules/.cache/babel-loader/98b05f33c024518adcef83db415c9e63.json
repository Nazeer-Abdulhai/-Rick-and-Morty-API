{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TheUser',\n\n  data() {\n    return {\n      Thelist: null,\n      name: '',\n      location: '',\n      type: '',\n      role: '',\n      episodeList: null,\n      episode: ''\n    };\n  },\n\n  methods: {\n    nameMoodRender() {\n      this.apiCall();\n    },\n\n    apiCall() {\n      axios({\n        method: 'get',\n        url: 'https://rickandmortyapi.com/api/character',\n        params: {\n          name: this.name,\n          location: this.location,\n          episode: this.episode,\n          status: this.role\n        }\n      }).then(res => {\n        this.Thelist = res.data.results;\n      }).catch('No result');\n    },\n\n    callEpisode() {\n      axios({\n        method: 'get',\n        url: 'https://rickandmortyapi.com/api/episode',\n        params: {\n          name: this.episode\n        }\n      }).then(res => {\n        this.episodeList = res.data.results;\n      }).catch('No result');\n    },\n\n    characterEpisode(list) {\n      let result = '';\n      list.forEach(char => {\n        axios({\n          method: 'get',\n          url: char\n        }).then(res => {\n          result = \"<div>\" + res.data.name + \"</div>\";\n        }).catch('No result');\n      });\n      return result;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2DA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;EAEXC,IAAI,EAAE,SAFK;;EAIXC,IAAI,GAAE;IACF,OAAO;MACHC,OAAO,EAAE,IADN;MAEFF,IAAI,EAAE,EAFJ;MAGFG,QAAQ,EAAE,EAHR;MAIFC,IAAI,EAAE,EAJJ;MAKFC,IAAI,EAAE,EALJ;MAMFC,WAAW,EAAE,IANX;MAOFC,OAAO,EAAE;IAPP,CAAP;EAUH,CAfU;;EAiBXC,OAAO,EAAE;IACLC,cAAc,GAAE;MAChB,KAAKC,OAAL;IACC,CAHI;;IAKLA,OAAO,GAAE;MACTX,KAAK,CAAC;QACFY,MAAM,EAAE,KADN;QAEFC,GAAG,EAAE,2CAFH;QAGFC,MAAM,EAAE;UACPb,IAAI,EAAE,KAAKA,IADJ;UAEPG,QAAQ,EAAE,KAAKA,QAFR;UAGPI,OAAO,EAAE,KAAKA,OAHP;UAIPO,MAAM,EAAE,KAAKT;QAJN;MAHN,CAAD,CAAL,CASGU,IATH,CASQC,GAAE,IACV;QACI,KAAKd,OAAL,GAAec,GAAG,CAACf,IAAJ,CAASgB,OAAxB;MACH,CAZD,EAYGC,KAZH,CAYS,WAZT;IAaC,CAnBI;;IAoBLC,WAAW,GAAE;MACTpB,KAAK,CAAC;QACNY,MAAM,EAAE,KADF;QAENC,GAAG,EAAE,yCAFC;QAGNC,MAAM,EAAE;UACPb,IAAI,EAAE,KAAKO;QADJ;MAHF,CAAD,CAAL,CAMDQ,IANC,CAMIC,GAAE,IACV;QACI,KAAKV,WAAL,GAAmBU,GAAG,CAACf,IAAJ,CAASgB,OAA5B;MACH,CATG,EASDC,KATC,CASK,WATL;IAUH,CA/BI;;IAiCLE,gBAAgB,CAACC,IAAD,EAAM;MAClB,IAAIC,MAAK,GAAI,EAAb;MAEAD,IAAI,CAACE,OAAL,CAAaC,IAAG,IAAK;QAChBzB,KAAK,CAAC;UACXY,MAAM,EAAE,KADG;UAEXC,GAAG,EAAEY;QAFM,CAAD,CAAL,CAGFT,IAHE,CAGGC,GAAE,IAGV;UACIM,MAAM,GAAE,UAAQN,GAAG,CAACf,IAAJ,CAASD,IAAjB,GAAsB,QAA9B;QACH,CARI,EAQFkB,KARE,CAQI,WARJ;MASJ,CAVD;MAWA,OAAOI,MAAP;IACH;;EAhDI;AAjBE,CAAf","names":["axios","name","data","Thelist","location","type","role","episodeList","episode","methods","nameMoodRender","apiCall","method","url","params","status","then","res","results","catch","callEpisode","characterEpisode","list","result","forEach","char"],"sourceRoot":"","sources":["/Users/nazirabdullah/Desktop/-Rick-and-Morty-API-2/src/components/TheCharacter.vue"],"sourcesContent":["<template>\n    <div class=\"main\">\n        <div class=\"forms\">\n            <!-- name and mood form  -->\n            <form @submit.prevent=\"nameMoodRender\">\n            <h2 class=\"title\">Search for an character</h2>\n                <label for=\"\">Give a Name</label>\n                <input type=\"text\"  v-model=\"name\">\n\n                <label>choose alive or dead Characters</label>\n                <select v-model=\"role\">\n                    <option value=\"Alive\">Alive</option>\n                    <option value=\"Dead\">Dead</option>\n                </select>\n                <button class=\"btn\">Show me the Characters</button>\n            </form>\n            <form @submit.prevent=\"callEpisode\">\n            <h2 class=\"title\">Search for an character</h2>\n                <label for=\"\">Give the Name of the episode</label>\n                <input type=\"text\"  v-model=\"episode\">\n                <button class=\"btn\">Show me the Characters</button>\n            </form>\n\n            <form action=\"\">\n                <label for=\"\">Or location</label>\n                <input type=\"text\"  v-model=\"location\">\n                <button class=\"btn\">Show me the Characters</button>\n            </form>\n        </div>\n        <div class=\"container\">\n            <!-- Search Episode  -->\n            <div class=\"card list\" style=\"width: 18rem;\" v-for=\"item in episodeList\" :key=\"item.id\" >\n                <h2 class=\"card-title\">{{ item.name}}</h2>\n                <img :src=\"item.image\" class=\"card-img-top\" alt=\"...\">\n                                        <!-- <p class=\"card-text\">Gender: {{item.name}}</p> -->\n                    <!-- <p class=\"card-text\">Specie: {{item.species}}</p> -->\n                    <!-- <p class=\"card-text\">Specie: {{item.type}}</p> -->\n\n                <div class=\"card-body\" v-html=\"characterEpisode(item.characters)\">\n                </div>\n\n                <!-- Search for Name or by a selected mood -->\n            </div>\n            <div class=\"card list\" style=\"width: 18rem;\" v-for=\"item in Thelist\" :key=\"item.id\" >\n                <h2 class=\"card-title\">{{ item.name}}</h2>\n                <img :src=\"item.image\" class=\"card-img-top\" alt=\"...\">\n                <div class=\"card-body\">\n                        <p class=\"card-text\">Gender: {{item.gender}}</p>\n                    <p class=\"card-text\">Specie: {{item.species}}</p>\n                    <p class=\"card-text\">Specie: {{item.type}}</p>\n                </div>\n            </div>\n\n            <!-- Search By location -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    \n    name: 'TheUser',\n\n    data(){\n        return {\n            Thelist: null,\n             name: '',\n             location: '',\n             type: '',\n             role: '',\n             episodeList: null,\n             episode: ''\n\n        };\n    },\n\n    methods: {\n        nameMoodRender(){\n        this.apiCall();\n        },\n\n        apiCall(){\n        axios({\n            method: 'get',\n            url: 'https://rickandmortyapi.com/api/character',\n            params: {\n             name: this.name,\n             location: this.location,\n             episode: this.episode,\n             status: this.role\n            },\n        }).then(res => \n        {\n            this.Thelist = res.data.results\n        }).catch('No result')\n        },\n        callEpisode(){\n            axios({\n            method: 'get',\n            url: 'https://rickandmortyapi.com/api/episode',\n            params: {\n             name: this.episode,\n            },\n        }).then(res => \n        {\n            this.episodeList = res.data.results\n        }).catch('No result')\n        },\n\n        characterEpisode(list){\n            let result = '';\n\n            list.forEach(char => {\n                 axios({\n            method: 'get',\n            url: char,\n            }).then(res =>\n            \n            \n            {\n                result= \"<div>\"+res.data.name+\"</div>\";\n            }).catch('No result')\n            })\n            return result;\n        },\n\n        \n    }\n}\n</script>\n\n\n<style scoped>\n.main{\n    margin-top: 15rem;\n}\n\n.forms{\n    display: flex;\n}\n.container{\n    justify-content: space-between;\n    \n}\n.list{\n    display: inline-flex;\n    margin: 10px;\n    box-shadow: rgba(251, 251, 251, 0.2) 0px 7px 29px 0px;\n}\n\n.list:hover{\n    transform: translateY(-1.5rem) scale(1.03);\n}\n\nform {\n    max-width: 400px;\n    margin: 30px auto;\n    background: white;\n    text-align: center;\n    padding: 40px;\n    border-radius: 10px;\n    box-shadow: rgba(255, 255, 255, 0.2) 0px 7px 29px 0px;\n    \n}\n\nlabel{\n    color: #aaa;\n    display: inline-block;\n    margin: 15px 0 0;\n    font-size: 1em;\n    letter-spacing: 1px;\n    font-weight: bold;\n}\n\ninput,select {\n    display: block;\n    padding: 10px 6px;\n    width: 100%;\n    box-sizing: border-box;\n    border: none;\n    border-bottom: 1px solid #ddd;\n    color: #555;\n}\n\nbutton{\n    background: white;\n    margin-top: 2rem;\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n\n}\n\nbutton:hover{\n    transform: translateY(-3px);\n}\n</style>"]},"metadata":{},"sourceType":"module"}