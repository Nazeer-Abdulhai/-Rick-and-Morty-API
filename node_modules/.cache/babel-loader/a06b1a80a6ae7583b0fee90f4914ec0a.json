{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f49fc30\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"main\"\n};\nconst _hoisted_2 = {\n  class: \"forms\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"title\"\n}, \"Search for an character\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Give a Name\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"choose alive or dead Characters\", -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Alive\"\n}, \"Alive\", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Dead\"\n}, \"Dead\", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = [_hoisted_6, _hoisted_7];\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn\"\n}, \"Show me the Characters\", -1\n/* HOISTED */\n));\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"title\"\n}, \"Search for an character\", -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Give the Name of the episode\", -1\n/* HOISTED */\n));\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn\"\n}, \"Show me the Characters\", -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Or location\", -1\n/* HOISTED */\n));\n\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn\"\n}, \"Show me the Characters\", -1\n/* HOISTED */\n));\n\nconst _hoisted_15 = {\n  class: \"container\"\n};\nconst _hoisted_16 = {\n  class: \"card-title\"\n};\nconst _hoisted_17 = [\"src\"];\nconst _hoisted_18 = {\n  class: \"card-body\"\n};\nconst _hoisted_19 = {\n  class: \"card-text\"\n};\nconst _hoisted_20 = {\n  class: \"card-text\"\n};\nconst _hoisted_21 = {\n  class: \"card-text\"\n};\nconst _hoisted_22 = {\n  class: \"card-title\"\n};\nconst _hoisted_23 = [\"src\"];\nconst _hoisted_24 = [\"innerHTML\"];\nconst _hoisted_25 = {\n  class: \"card-title\"\n};\nconst _hoisted_26 = [\"src\"];\nconst _hoisted_27 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" All 3 forms \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" name and mood form  \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.nameMoodRender && $options.nameMoodRender(...args), [\"prevent\"]))\n  }, [_hoisted_3, _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.name]]), _createCommentVNode(\" Search for Name or by a selected mood \"), _hoisted_5, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.role = $event)\n  }, _hoisted_8, 512\n  /* NEED_PATCH */\n  ), [[_vModelSelect, $data.role]]), _hoisted_9], 32\n  /* HYDRATE_EVENTS */\n  ), _createCommentVNode(\" Episode form \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.callEpisode && $options.callEpisode(...args), [\"prevent\"]))\n  }, [_hoisted_10, _hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.episode = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.episode]]), _hoisted_12], 32\n  /* HYDRATE_EVENTS */\n  ), _createCommentVNode(\" location form \"), _createElementVNode(\"form\", {\n    action: \"\",\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.callLocation && $options.callLocation(...args), [\"prevent\"]))\n  }, [_hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.location = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.location]]), _hoisted_14], 32\n  /* HYDRATE_EVENTS */\n  )]), _createCommentVNode(\" Displaying the characters \"), _createElementVNode(\"div\", _hoisted_15, [_createCommentVNode(\" NameMood Display \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.TheNameMoodList, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card list\",\n      style: {\n        \"width\": \"18rem\"\n      },\n      key: item.id\n    }, [_createElementVNode(\"h2\", _hoisted_16, _toDisplayString(item.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"img\", {\n      src: item.image,\n      class: \"card-img-top\",\n      alt: \"...\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_17), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"p\", _hoisted_19, \"Gender: \" + _toDisplayString(item.gender), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", _hoisted_20, \"Specie: \" + _toDisplayString(item.species), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", _hoisted_21, \"Specie: \" + _toDisplayString(item.type), 1\n    /* TEXT */\n    )])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createCommentVNode(\" Episode display \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.episodeList, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card list\",\n      style: {\n        \"width\": \"18rem\"\n      },\n      key: item.id\n    }, [_createElementVNode(\"h2\", _hoisted_22, _toDisplayString(item.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"img\", {\n      src: item.image,\n      class: \"card-img-top\",\n      alt: \"...\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_23), _createCommentVNode(\" <p class=\\\"card-text\\\">Specie: {{item.species}}</p>\\n                    <p class=\\\"card-text\\\">Specie: {{item.type}}</p> \"), _createElementVNode(\"div\", {\n      class: \"card-body\",\n      innerHTML: $options.characterEpisode(item.characters)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_24)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createCommentVNode(\" Search By location \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.LocationList, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card list\",\n      style: {\n        \"width\": \"18rem\"\n      },\n      key: item.id\n    }, [_createElementVNode(\"h2\", _hoisted_25, _toDisplayString(item.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"img\", {\n      src: item.image,\n      class: \"card-img-top\",\n      alt: \"...\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_26), _createCommentVNode(\" <p class=\\\"card-text\\\">Specie: {{item.species}}</p>\\n                    <p class=\\\"card-text\\\">Specie: {{item.type}}</p> \"), _createElementVNode(\"div\", {\n      class: \"card-body\",\n      innerHTML: $options.characterLocation(item.locations)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_27)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","for","value","_hoisted_6","_hoisted_7","_createElementBlock","_createCommentVNode","onSubmit","$options","_hoisted_3","_hoisted_4","type","$data","$event","_hoisted_5","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","action","_hoisted_13","_hoisted_14","_Fragment","_renderList","item","style","key","id","_toDisplayString","name","src","image","alt","gender","species","innerHTML","characters","locations"],"sourceRoot":"","sources":["/Users/nazirabdullah/Desktop/-Rick-and-Morty-API-2/src/components/TheCharacter.vue"],"sourcesContent":["<template>\n    <div class=\"main\">\n        <!-- All 3 forms -->\n        <div class=\"forms\">\n            <!-- name and mood form  -->\n            <form @submit.prevent=\"nameMoodRender\">\n                <h2 class=\"title\">Search for an character</h2>\n                    <label for=\"\">Give a Name</label>\n                    <input type=\"text\"  v-model=\"name\">\n\n                    <!-- Search for Name or by a selected mood -->\n                    <label>choose alive or dead Characters</label>\n                    <select v-model=\"role\">\n                        <option value=\"Alive\">Alive</option>\n                        <option value=\"Dead\">Dead</option>\n                    </select>\n                    <button class=\"btn\">Show me the Characters</button>\n            </form>\n            <!-- Episode form -->\n            <form @submit.prevent=\"callEpisode\">\n                <h2 class=\"title\">Search for an character</h2>\n                    <label for=\"\">Give the Name of the episode</label>\n                    <input type=\"text\"  v-model=\"episode\">\n                    <button class=\"btn\">Show me the Characters</button>\n            </form>\n            <!-- location form -->\n            <form action=\"\" @submit.prevent=\"callLocation\">\n                <label for=\"\">Or location</label>\n                <input type=\"text\"  v-model=\"location\">\n                <button class=\"btn\">Show me the Characters</button>\n            </form>\n        </div>\n\n\n        <!-- Displaying the characters -->\n\n        <div class=\"container\">\n\n\n                <!-- NameMood Display -->\n            <div class=\"card list\" style=\"width: 18rem;\" v-for=\"item in TheNameMoodList\" :key=\"item.id\" >\n                <h2 class=\"card-title\">{{ item.name}}</h2>\n                <img :src=\"item.image\" class=\"card-img-top\" alt=\"...\">\n                <div class=\"card-body\">\n                    <p class=\"card-text\">Gender: {{item.gender}}</p>\n                    <p class=\"card-text\">Specie: {{item.species}}</p>\n                    <p class=\"card-text\">Specie: {{item.type}}</p>\n                </div>\n            </div>\n\n            <!-- Episode display -->\n            <div class=\"card list\" style=\"width: 18rem;\" v-for=\"item in episodeList\" :key=\"item.id\" >\n                <h2 class=\"card-title\">{{ item.name}}</h2>\n                <img :src=\"item.image\" class=\"card-img-top\" alt=\"...\">\n                    <!-- <p class=\"card-text\">Specie: {{item.species}}</p>\n                    <p class=\"card-text\">Specie: {{item.type}}</p> -->\n\n                <div class=\"card-body\" v-html=\"characterEpisode(item.characters)\">\n                </div>\n            </div>\n\n            <!-- Search By location -->\n                <div class=\"card list\" style=\"width: 18rem;\" v-for=\"item in LocationList\" :key=\"item.id\" >\n                <h2 class=\"card-title\">{{ item.name}}</h2>\n                <img :src=\"item.image\" class=\"card-img-top\" alt=\"...\">\n                    <!-- <p class=\"card-text\">Specie: {{item.species}}</p>\n                    <p class=\"card-text\">Specie: {{item.type}}</p> -->\n\n                <div class=\"card-body\" v-html=\"characterLocation(item.locations)\">\n                </div>\n            </div>\n            \n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    \n    name: 'TheUser',\n\n    data(){\n        return {\n            TheNameMoodList: null,\n            episodeList: null,\n            LocationList: null,\n             name: '',\n             location: '',\n             type: '',\n             role: '',\n             episode: ''\n\n        };\n    },\n\n    methods: {\n        nameMoodRender(){\n        this.apiCall();\n        },\n\n        apiCall(){\n        axios({\n            method: 'get',\n            url: 'https://rickandmortyapi.com/api/character',\n            params: {\n             name: this.name,\n             location: this.location,\n             episode: this.episode,\n             status: this.role\n            },\n        }).then(res => \n        {\n            this.TheNameMoodList = res.data.results\n        }).catch('No result')\n        },\n\n        callEpisode(){\n            axios({\n            method: 'get',\n            url: 'https://rickandmortyapi.com/api/episode',\n            params: {\n            name: this.episode,\n            },\n        }).then(res => \n        {\n            this.episodeList = res.data.results\n        }).catch('No Episode has been found')\n        },\n\n        characterEpisode(list){\n            let result = '';\n            list.forEach(char => {\n                 axios({\n            method: 'get',\n            url: char,\n            }).then(res =>\n            \n            \n            {\n                result= \"<div>\"+res.data.name+\"</div>\";\n            }).catch('No result')\n            })\n            return result;\n        },\n\n        callLocation(){\n            axios({\n            method: 'get',\n            url: 'https://rickandmortyapi.com/api/location',\n            params: {\n             type: this.location,\n            },\n        }).then(res => \n        {\n            this.LocationList = res.data.results\n        }).catch('No Location has been found')\n        },\n\n\n        characterLocation(list){\n            let result = '';\n            list.forEach(loc => {\n            axios({\n            method: 'get',\n            url: loc,\n            }).then(res =>\n            {\n                result= \"<div>\"+res.data.name+\"</div>\";\n            }).catch('No result')\n            })\n            return result;\n        },\n\n\n\n        \n    }\n}\n</script>\n\n\n<style scoped>\n.main{\n    margin-top: 15rem;\n}\n\n.forms{\n    display: flex;\n}\n.container{\n    justify-content: space-between;\n    \n}\n.list{\n    display: inline-flex;\n    margin: 10px;\n    box-shadow: rgba(251, 251, 251, 0.2) 0px 7px 29px 0px;\n}\n\n.list:hover{\n    transform: translateY(-1.5rem) scale(1.03);\n}\n\nform {\n    max-width: 400px;\n    margin: 30px auto;\n    background: white;\n    text-align: center;\n    padding: 40px;\n    border-radius: 10px;\n    box-shadow: rgba(255, 255, 255, 0.2) 0px 7px 29px 0px;\n    \n}\n\nlabel{\n    color: #aaa;\n    display: inline-block;\n    margin: 15px 0 0;\n    font-size: 1em;\n    letter-spacing: 1px;\n    font-weight: bold;\n}\n\ninput,select {\n    display: block;\n    padding: 10px 6px;\n    width: 100%;\n    box-sizing: border-box;\n    border: none;\n    border-bottom: 1px solid #ddd;\n    color: #555;\n}\n\nbutton{\n    background: white;\n    margin-top: 2rem;\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n\n}\n\nbutton:hover{\n    transform: translateY(-3px);\n}\n</style>"]},"metadata":{},"sourceType":"module"}