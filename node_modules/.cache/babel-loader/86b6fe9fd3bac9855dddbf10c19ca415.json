{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-83673848\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  action: \"\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Give dimention\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Give location\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Give episode\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-primary\"\n}, \"Show me the character\", -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Users:\", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = {\n  class: \"list\"\n};\nconst _hoisted_8 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.dimension = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.dimension]]), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.location = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.location]]), _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.episode = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.episode]]), _hoisted_5]), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.Thelist, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"item\",\n      key: item.id\n    }, [_createTextVNode(_toDisplayString(item.name) + \" \", 1\n    /* TEXT */\n    ), _createElementVNode(\"img\", {\n      src: item.image,\n      alt: \"\",\n      sizes: \"\",\n      srcset: \"\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_8)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;;;;EAEcA,MAAM,EAAC;;;gEACTC,oBAAoC,OAApC,EAAoC;EAA7BC,GAAG,EAAC;AAAyB,CAApC,EAAc,gBAAd,EAA4B;AAAA;AAA5B;;gEAGAD,oBAAmC,OAAnC,EAAmC;EAA5BC,GAAG,EAAC;AAAwB,CAAnC,EAAc,eAAd,EAA2B;AAAA;AAA3B;;gEAGAD,oBAAkC,OAAlC,EAAkC;EAA3BC,GAAG,EAAC;AAAuB,CAAlC,EAAc,cAAd,EAA0B;AAAA;AAA1B;;gEAECD,oBAA8D,QAA9D,EAA8D;EAAtDE,KAAK,EAAC;AAAgD,CAA9D,EAAgC,uBAAhC,EAAqD;AAAA;AAArD;;gEAELF,oBAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,EAAU;AAAA;AAAV;;;EACSE,KAAK,EAAC;;;;uBAbnBC,oBAmBM,KAnBN,EAmBM,IAnBN,EAmBM,CAlBFH,oBAUO,MAVP,cAUO,CATHI,UASG,kBARHJ,oBAAwC,OAAxC,EAAwC;IAAjCK,IAAI,EAAC,MAA4B;+DAAXC,kBAASC;EAAE,CAAxC;;EAAA,kBAA6BD,kBAQ1B,EANHE,UAMG,kBALHR,oBAAuC,OAAvC,EAAuC;IAAhCK,IAAI,EAAC,MAA2B;+DAAVC,iBAAQC;EAAE,CAAvC;;EAAA,kBAA6BD,iBAK1B,EAHHG,UAGG,kBAFHT,oBAAsC,OAAtC,EAAsC;IAA/BK,IAAI,EAAC,MAA0B;+DAATC,gBAAOC;EAAE,CAAtC;;EAAA,kBAA6BD,gBAE1B,EADFI,UACE,CAVP,CAkBE,EAPFC,UAOE,EANEX,oBAKE,KALF,cAKE,oBAJFG,oBAGMS,SAHN,EAGM,IAHN,EAGMC,YAH0CP,aAG1C,EAHkCQ,IAAe,IAAX;yBAA5CX,oBAGM,KAHN,EAGM;MAHDD,KAAK,EAAC,MAGL;MAHaa,GAAG,EAAED,IAAI,CAACE;IAGvB,CAHN,qCACGF,IAAI,CAACG,QAAM,KACd;IAAA;OAAAjB,oBAAiD,KAAjD,EAAiD;MAA3CkB,GAAG,EAAEJ,IAAI,CAACK,KAAiC;MAA1BC,GAAG,EAAC,EAAsB;MAAnBC,KAAK,EAAC,EAAa;MAAVC,MAAM,EAAC;IAAG,CAAjD;;IAAA,cAFA;GAGM,CAHN;;EAAA,CAIE,EALF,CAMF,CAnBN","names":["action","_createElementVNode","for","class","_createElementBlock","_hoisted_2","type","$data","$event","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","item","key","id","name","src","image","alt","sizes","srcset"],"sourceRoot":"","sources":["/Users/nazirabdullah/Desktop/newapi/src/components/TheUser.vue"],"sourcesContent":["<template>\n    <div>\n        <form action=\"\">\n            <label for=\"\">Give dimention</label>\n            <input type=\"text\"  v-model=\"dimension\">\n\n            <label for=\"\">Give location</label>\n            <input type=\"text\"  v-model=\"location\">\n\n            <label for=\"\">Give episode</label>\n            <input type=\"text\"  v-model=\"episode\">\n             <button class=\"btn btn-primary\">Show me the character</button>\n        </form>\n        <h1>Users:</h1>\n            <div class=\"list\">\n            <div class=\"item\" :key=\"item.id\" v-for=\"item in Thelist\">\n            {{ item.name}}\n            <img :src=\"item.image\" alt=\"\" sizes=\"\" srcset=\"\">\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    \n    name: 'TheUser',\n\n    data(){\n        return {\n            Thelist: null,\n            dimension: '',\n             location: '',\n             episode: '',\n        };\n    },\n\n    created: function() {\n        axios.get(\"https://rickandmortyapi.com/api/character?status=\"+ this.dimension)\n        .then(res => {this.Thelist = res.data.results;\n        console.log(res);\n        }).catch ('no result has been found')\n    }\n}\n</script>\n\n\n<style scoped>\n\nform {\n    max-width: 420px;\n    margin: 30px auto;\n    background: white;\n    text-align: left;\n    padding: 40px;\n    border-radius: 10px;\n}\n\nlabel{\n    color: #aaa;\n    display: inline-block;\n    margin: 25px 0 15px;\n    font-size: 0.6em;\n    letter-spacing: 1px;\n    font-weight: bold;\n}\n\ninput {\n    display: block;\n    padding: 10px 6px;\n    width: 100%;\n    box-sizing: border-box;\n    border: none;\n    border-bottom: 1px solid #ddd;\n    color: #555;\n}\n\n<button\n</style>"]},"metadata":{},"sourceType":"module"}