{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-83673848\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Users:\", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = {\n  class: \"list\"\n};\nconst _hoisted_3 = {\n  class: \"item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.TheUser, item => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_3);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))])]), _createCommentVNode(\" <h2 v-for=\\\"user in TheUser\\\" :key=\\\"user.id\\\">{{ user.name }}</h2> \"), _createCommentVNode(\" <p>{{user.location.url}}</p> \"), _createCommentVNode(\" <img v-for=\\\"user in TheUser\\\" :key=\\\"user.id\\\" :src=\\\" user.image\\\"> \"), _createCommentVNode(\" <img :src=\\\"user.image\\\" alt=\\\"\\\"> \"), _createCommentVNode(\" <h2>{{ user.name }}</h2> \"), _createCommentVNode(\" \\n<table class=\\\"table\\\">\\n  <thead>\\n    <tr v-for=\\\"user in TheUser\\\" :key=\\\"user.id\\\">\\n      <th scope=\\\"col\\\">{{ user.name }}</th>\\n     <img v-for=\\\"user in TheUser\\\" :key=\\\"user.id\\\" :src=\\\" user.image\\\">\\n      <th scope=\\\"col\\\"><img :src=\\\"user.image\\\" alt=\\\"\\\"></th>\\n      <th scope=\\\"col\\\">Handle</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th scope=\\\"row\\\">1</th>\\n      <td>Mark</td>\\n      <td>Otto</td>\\n      <td>@mdo</td>\\n    </tr>\\n    <tr>\\n      <th scope=\\\"row\\\">2</th>\\n      <td>Jacob</td>\\n      <td>Thornton</td>\\n      <td>@fat</td>\\n    </tr>\\n  </tbody>\\n</table> \")], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gEAEQA,oBAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,EAAU;AAAA;AAAV;;;EACKC,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;6DAHnBD,oBAOM,KAPN,EAOM,IAPN,EAOM,CANFE,UAME,EALFF,oBAIM,KAJN,cAIM,oBAHFG,oBAEMC,SAFN,EAEM,IAFN,EAEMC,YAF2BC,YAE3B,EAFmBC,IAAe,IAAX;yBAA7BJ,oBAEM,KAFN;GAEM,CAFN;;EAAA,CAGE,EAJN,CAKE,CAPN,GAQAK,8FACAA,uDACAA,gGACAA,6DACAA,mDACJA","names":["_createElementVNode","class","_hoisted_1","_createElementBlock","_Fragment","_renderList","_ctx","item","_createCommentVNode"],"sourceRoot":"","sources":["/Users/nazirabdullah/Desktop/newapi/src/components/TheUser.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>Users:</h1>\n        <div class=\"list\">\n            <div class=\"item\" v-for=\"item in TheUser\">\n\n            </div>\n        </div>\n    </div>\n    <!-- <h2 v-for=\"user in TheUser\" :key=\"user.id\">{{ user.name }}</h2> -->\n    <!-- <p>{{user.location.url}}</p> -->\n    <!-- <img v-for=\"user in TheUser\" :key=\"user.id\" :src=\" user.image\"> -->\n    <!-- <img :src=\"user.image\" alt=\"\"> -->\n    <!-- <h2>{{ user.name }}</h2> -->\n<!-- \n<table class=\"table\">\n  <thead>\n    <tr v-for=\"user in TheUser\" :key=\"user.id\">\n      <th scope=\"col\">{{ user.name }}</th>\n     <img v-for=\"user in TheUser\" :key=\"user.id\" :src=\" user.image\">\n      <th scope=\"col\"><img :src=\"user.image\" alt=\"\"></th>\n      <th scope=\"col\">Handle</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">1</th>\n      <td>Mark</td>\n      <td>Otto</td>\n      <td>@mdo</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">2</th>\n      <td>Jacob</td>\n      <td>Thornton</td>\n      <td>@fat</td>\n    </tr>\n  </tbody>\n</table> -->\n\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    \n    name: 'TheUser',\n\n    data(){\n        return {\n            Thelist: null,\n        };\n    },\n\n    created: function() {\n        axios.get('https://rickandmortyapi.com/api/character')\n        .then(res => {this.Thelist = res.data.results;\n        console.log(res.data.results);\n        }).catch ('no result has been found')\n    }\n}\n</script>\n\n\n<style scoped>\nh3 {\n    margin-bottom: 3rem;\n}\n</style>"]},"metadata":{},"sourceType":"module"}