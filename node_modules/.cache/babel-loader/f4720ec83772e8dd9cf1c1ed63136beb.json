{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-83673848\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Give dimension\", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Give location\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Give episode\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Role: \", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Alive\"\n}, \"Alive\", -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Dead\"\n}, \"Dead\", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = [_hoisted_5, _hoisted_6];\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-primary\"\n}, \"Show me the character\", -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Users:\", -1\n/* HOISTED */\n));\n\nconst _hoisted_10 = {\n  class: \"list\"\n};\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = {\n  class: \"card-body\"\n};\nconst _hoisted_14 = {\n  class: \"card-title\"\n};\nconst _hoisted_15 = {\n  class: \"card-text\"\n};\nconst _hoisted_16 = {\n  class: \"card-text\"\n};\nconst _hoisted_17 = {\n  class: \"card-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_P = _resolveComponent(\"P\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.submitting && $options.submitting(...args), [\"prevent\"]))\n  }, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.dimension = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.dimension]]), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.location = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.location]]), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.episode = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.episode]]), _hoisted_4, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.role = $event)\n  }, _hoisted_7, 512\n  /* NEED_PATCH */\n  ), [[_vModelSelect, $data.role]]), _hoisted_8], 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_createCommentVNode(\" {{ dimension }} \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.Thelist, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"item\",\n      key: item.id\n    }, [_createTextVNode(_toDisplayString(item.name) + \" \", 1\n    /* TEXT */\n    ), _createVNode(_component_P, null, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(item.species), 1\n      /* TEXT */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1024\n    /* DYNAMIC_SLOTS */\n    ), _createElementVNode(\"p\", null, _toDisplayString(item.gender), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(item.type), 1\n    /* TEXT */\n    ), _createCommentVNode(\" <img :src=\\\"item.location\\\" alt=\\\"\\\"> \"), _createElementVNode(\"img\", {\n      src: item.image,\n      alt: \"\",\n      sizes: \"\",\n      srcset: \"\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_11)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createCommentVNode(\" <div>\\n                            {{ location }}\\n                        </div>\\n                        <div>\\n                            {{ episode }}\\n                        </div>\\n                        <div>\\n                            {{ role }}\\n                        </div> \"), _createCommentVNode(\" bootstarp card \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.Thelist, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card list\",\n      style: {\n        \"width\": \"18rem\"\n      },\n      key: item.id\n    }, [_createElementVNode(\"img\", {\n      src: item.image,\n      class: \"card-img-top\",\n      alt: \"...\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_12), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"h5\", _hoisted_14, _toDisplayString(item.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", _hoisted_15, _toDisplayString(item.gender), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", _hoisted_16, _toDisplayString(item.species), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", _hoisted_17, _toDisplayString(item.type), 1\n    /* TEXT */\n    )])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","for","value","_hoisted_5","_hoisted_6","class","_createElementBlock","onSubmit","$options","_hoisted_1","type","$data","$event","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_8","_hoisted_9","_createCommentVNode","_Fragment","_renderList","item","key","id","name","_createVNode","_component_P","species","_toDisplayString","gender","src","image","alt","sizes","srcset","style"],"sourceRoot":"","sources":["/Users/nazirabdullah/Desktop/newapi/src/components/TheUser.vue"],"sourcesContent":["<template>\n    <div>\n        <form @submit.prevent=\"submitting\">\n            <label for=\"\">Give dimension</label>\n            <input type=\"text\"  v-model=\"dimension\">\n\n            <label for=\"\">Give location</label>\n            <input type=\"text\"  v-model=\"location\">\n\n            <label for=\"\">Give episode</label>\n            <input type=\"text\"  v-model=\"episode\">\n\n            <label > Role: </label>\n            <select v-model=\"role\">\n                <option value=\"Alive\">Alive</option>\n                <option value=\"Dead\">Dead</option>\n            </select>\n             <button class=\"btn btn-primary\">Show me the character</button>\n        </form>\n\n\n        <h1>Users:</h1>\n            <div class=\"list\">\n                            <!-- {{ dimension }} -->\n                        <div class=\"item\" :key=\"item.id\" v-for=\"item in Thelist\">\n                        {{ item.name}}\n                        <P>{{item.species}}</P>\n                        <p>{{ item.gender}}</p>\n                        <p>{{ item.type}}</p>\n                        <!-- <img :src=\"item.location\" alt=\"\"> -->\n                        <img :src=\"item.image\" alt=\"\" sizes=\"\" srcset=\"\">\n                        </div>\n            </div>\n                        <!-- <div>\n                            {{ location }}\n                        </div>\n                        <div>\n                            {{ episode }}\n                        </div>\n                        <div>\n                            {{ role }}\n                        </div> -->\n                        <!-- bootstarp card -->\n\n                        <div class=\"card list\" style=\"width: 18rem;\" :key=\"item.id\" v-for=\"item in Thelist\">\n                        <img :src=\"item.image\" class=\"card-img-top\" alt=\"...\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">{{ item.name}}</h5>\n                             <p class=\"card-text\">{{item.gender}}</p>\n                            <p class=\"card-text\">{{item.species}}</p>\n                            <p class=\"card-text\">{{ item.type}}</p>\n                        </div>\n                    </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    \n    name: 'TheUser',\n\n    data(){\n        return {\n            Thelist: null,\n            dimension: '',\n             location: '',\n             episode: '',\n             role: ''\n        };\n    },\n\n    created: function() {\n      this.apiCall()\n    },\n\n    methods: {\n        submitting(){\n        this.apiCall()\n        },\n\n        apiCall(){\n        // axios.get(\"https://rickandmortyapi.com/api/character?status=\"+ this.dimension)\n        // .then(res => {this.Thelist = res.data.results;\n        // console.log(res);\n        // }).catch ('no result has been found')\n        axios({\n            method: 'get',\n            url: 'https://rickandmortyapi.com/api/character',\n            params: {\n            //  status: this.dimension,\n            //  status: this.location,\n             status: this.episode,\n            //  status: this.role\n            },\n        }).then(res => \n        {\n            this.Thelist = res.data.results\n        }).catch('No result')\n        }\n\n    }\n}\n</script>\n\n\n<style scoped>\n\n.list{\n    display: flex;\n}\n\nform {\n    max-width: 420px;\n    margin: 30px auto;\n    background: white;\n    text-align: left;\n    padding: 40px;\n    border-radius: 10px;\n}\n\nlabel{\n    color: #aaa;\n    display: inline-block;\n    margin: 25px 0 15px;\n    font-size: 0.6em;\n    letter-spacing: 1px;\n    font-weight: bold;\n}\n\ninput,select {\n    display: block;\n    padding: 10px 6px;\n    width: 100%;\n    box-sizing: border-box;\n    border: none;\n    border-bottom: 1px solid #ddd;\n    color: #555;\n}\n\nbutton{\n\n    margin: 40px;\n\n}\n</style>"]},"metadata":{},"sourceType":"module"}