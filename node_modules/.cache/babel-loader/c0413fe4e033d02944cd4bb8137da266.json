{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f49fc30\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"main\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"title\"\n}, \"Search for an character\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Give the Name of the episode\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn\"\n}, \"Show me the Characters\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"container\"\n};\nconst _hoisted_6 = {\n  class: \"card-title\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <form @submit.prevent=\\\"submitting\\\">\\n        <h2 class=\\\"title\\\">Search for an character</h2>\\n            <label for=\\\"\\\">Give a Name</label>\\n            <input type=\\\"text\\\"  v-model=\\\"name\\\">\\n\\n            <label for=\\\"\\\">Or location</label>\\n            <input type=\\\"text\\\"  v-model=\\\"location\\\">\\n\\n            <label for=\\\"\\\">Or type</label>\\n            <input type=\\\"text\\\"  v-model=\\\"type\\\">\\n\\n            <label>choose alive or dead Characters</label>\\n            <select v-model=\\\"role\\\">\\n                <option value=\\\"Alive\\\">Alive</option>\\n                <option value=\\\"Dead\\\">Dead</option>\\n            </select>\\n            <button class=\\\"btn\\\">Show me the Characters</button>\\n        </form> \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.callEpisode && $options.callEpisode(...args), [\"prevent\"]))\n  }, [_hoisted_2, _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.episode = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.episode]]), _hoisted_4], 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.episodeList, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card list\",\n      style: {\n        \"width\": \"18rem\"\n      },\n      key: item.id\n    }, [_createElementVNode(\"h2\", _hoisted_6, _toDisplayString(item.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"img\", {\n      src: item.image,\n      class: \"card-img-top\",\n      alt: \"...\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_7), _createElementVNode(\"div\", {\n      class: \"card-body\",\n      innerHTML: _ctx.characterRender(_ctx.it)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_8)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createCommentVNode(\" <div class=\\\"card list\\\" style=\\\"width: 18rem;\\\" v-for=\\\"item in Thelist\\\" :key=\\\"item.id\\\" >\\n                <h2 class=\\\"card-title\\\">{{ item.name}}</h2>\\n                <img :src=\\\"item.image\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\">\\n                <div class=\\\"card-body\\\">\\n                        <p class=\\\"card-text\\\">Gender: {{item.gender}}</p>\\n                    <p class=\\\"card-text\\\">Specie: {{item.species}}</p>\\n                    <p class=\\\"card-text\\\">Specie: {{item.type}}</p>\\n                </div>\\n            </div> \")])]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;gEAoBPC,oBAA8C,IAA9C,EAA8C;EAA1CD,KAAK,EAAC;AAAoC,CAA9C,EAAkB,yBAAlB,EAAyC;AAAA;AAAzC;;gEACIC,oBAAkD,OAAlD,EAAkD;EAA3CC,GAAG,EAAC;AAAuC,CAAlD,EAAc,8BAAd,EAA0C;AAAA;AAA1C;;gEAEAD,oBAAmD,QAAnD,EAAmD;EAA3CD,KAAK,EAAC;AAAqC,CAAnD,EAAoB,wBAApB,EAA0C;AAAA;AAA1C;;;EAGCA,KAAK,EAAC;;;EAECA,KAAK,EAAC;;;;;uBA5BtBG,oBAgDM,KAhDN,cAgDM,CA/CFC,4uBA+CE,EA7BFH,oBAKO,MALP,EAKO;IALAI,QAAM,wDAAUC,qDAAV,EAAqB,WAArB;EAKN,CALP,GACAC,YACIC,4BACAP,oBAAsC,OAAtC,EAAsC;IAA/BQ,IAAI,EAAC,MAA0B;+DAATC,gBAAOC;EAAE,CAAtC;;EAAA,kBAA6BD,kBAC7BE,WAJJ;;EAAA,CA6BE,EAtBFX,oBAqBM,KArBN,cAqBM,oBApBFE,oBAUMU,SAVN,EAUM,IAVN,EAUMC,YAVsDJ,iBAUtD,EAV8CK,IAAmB,IAAf;yBAAxDZ,oBAUM,KAVN,EAUM;MAVDH,KAAK,EAAC,WAUL;MAViBgB,KAAqB,EAArB;QAAA;MAAA,CAUjB;MAVoEC,GAAG,EAAEF,IAAI,CAACG;IAU9E,CAVN,GACIjB,oBAA0C,IAA1C,cAA0CkB,iBAAhBJ,IAAI,CAACK,IAAW,CAA1C,EAAmC;IAAA;IAAnC,GACAnB,oBAAsD,KAAtD,EAAsD;MAAhDoB,GAAG,EAAEN,IAAI,CAACO,KAAsC;MAA/BtB,KAAK,EAAC,cAAyB;MAAVuB,GAAG,EAAC;IAAM,CAAtD;;IAAA,eAEAtB,oBAKM,KALN,EAKM;MALDD,KAAK,EAAC,WAKL;MALiBwB,SAA4B,EAApBC,qBAAgBA,OAAhB;IAKzB,CALN;;IAAA,cAJJ;GAUM,CAVN;;EAAA,CAoBE,GATFrB,ojBASE,CArBN,CAsBE,CAhDN","names":["class","_createElementVNode","for","_createElementBlock","_createCommentVNode","onSubmit","$options","_hoisted_2","_hoisted_3","type","$data","$event","_hoisted_4","_Fragment","_renderList","item","style","key","id","_toDisplayString","name","src","image","alt","innerHTML","_ctx"],"sourceRoot":"","sources":["/Users/nazirabdullah/Desktop/-Rick-and-Morty-API-2/src/components/TheCharacter.vue"],"sourcesContent":["<template>\n    <div class=\"main\">\n        <!-- <form @submit.prevent=\"submitting\">\n        <h2 class=\"title\">Search for an character</h2>\n            <label for=\"\">Give a Name</label>\n            <input type=\"text\"  v-model=\"name\">\n\n            <label for=\"\">Or location</label>\n            <input type=\"text\"  v-model=\"location\">\n\n            <label for=\"\">Or type</label>\n            <input type=\"text\"  v-model=\"type\">\n\n            <label>choose alive or dead Characters</label>\n            <select v-model=\"role\">\n                <option value=\"Alive\">Alive</option>\n                <option value=\"Dead\">Dead</option>\n            </select>\n            <button class=\"btn\">Show me the Characters</button>\n        </form> -->\n        <form @submit.prevent=\"callEpisode\">\n        <h2 class=\"title\">Search for an character</h2>\n            <label for=\"\">Give the Name of the episode</label>\n            <input type=\"text\"  v-model=\"episode\">\n            <button class=\"btn\">Show me the Characters</button>\n        </form>\n        \n        <div class=\"container\">\n            <div class=\"card list\" style=\"width: 18rem;\" v-for=\"item in episodeList\" :key=\"item.id\" >\n                <h2 class=\"card-title\">{{ item.name}}</h2>\n                <img :src=\"item.image\" class=\"card-img-top\" alt=\"...\">\n\n                <div class=\"card-body\" v-html=\"characterRender(it)\">\n                    {{ item.characters }}\n                        <!-- <p class=\"card-text\">Gender: {{item.name}}</p> -->\n                    <!-- <p class=\"card-text\">Specie: {{item.species}}</p> -->\n                    <!-- <p class=\"card-text\">Specie: {{item.type}}</p> -->\n                </div>\n            </div>\n            <!-- <div class=\"card list\" style=\"width: 18rem;\" v-for=\"item in Thelist\" :key=\"item.id\" >\n                <h2 class=\"card-title\">{{ item.name}}</h2>\n                <img :src=\"item.image\" class=\"card-img-top\" alt=\"...\">\n                <div class=\"card-body\">\n                        <p class=\"card-text\">Gender: {{item.gender}}</p>\n                    <p class=\"card-text\">Specie: {{item.species}}</p>\n                    <p class=\"card-text\">Specie: {{item.type}}</p>\n                </div>\n            </div> -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    \n    name: 'TheUser',\n\n    data(){\n        return {\n            Thelist: null,\n             name: '',\n             location: '',\n             type: '',\n             role: '',\n             episodeList: null,\n             episode: ''\n\n        };\n    },\n\n    methods: {\n        // submitting(){\n        // this.apiCall();\n        // },\n\n        apiCall(){\n        axios({\n            method: 'get',\n            url: 'https://rickandmortyapi.com/api/character',\n            params: {\n             name: this.name,\n             location: this.location,\n             episode: this.episode,\n             status: this.role\n            },\n        }).then(res => \n        {\n            this.Thelist = res.data.results\n        }).catch('No result')\n        },\n        callEpisode(){\n            axios({\n            method: 'get',\n            url: 'https://rickandmortyapi.com/api/episode',\n            params: {\n             name: this.episode,\n            },\n        }).then(res => \n        {\n            this.episodeList = res.data.results\n        }).catch('No result')\n        }\n    }\n}\n</script>\n\n\n<style scoped>\n.main{\n    margin-top: 15rem;\n}\n.container{\n    justify-content: space-between;\n    \n}\n.list{\n    display: inline-flex;\n    margin: 10px;\n    box-shadow: rgba(251, 251, 251, 0.2) 0px 7px 29px 0px;\n}\n\n.list:hover{\n    transform: translateY(-1.5rem) scale(1.03);\n}\n\nform {\n    max-width: 700px;\n    margin: 30px auto;\n    background: white;\n    text-align: center;\n    padding: 40px;\n    border-radius: 10px;\n    box-shadow: rgba(255, 255, 255, 0.2) 0px 7px 29px 0px;\n    \n}\n\nlabel{\n    color: #aaa;\n    display: inline-block;\n    margin: 15px 0 0;\n    font-size: 1em;\n    letter-spacing: 1px;\n    font-weight: bold;\n}\n\ninput,select {\n    display: block;\n    padding: 10px 6px;\n    width: 100%;\n    box-sizing: border-box;\n    border: none;\n    border-bottom: 1px solid #ddd;\n    color: #555;\n}\n\nbutton{\n    background: white;\n    margin-top: 2rem;\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n\n}\n\nbutton:hover{\n    transform: translateY(-3px);\n}\n</style>"]},"metadata":{},"sourceType":"module"}